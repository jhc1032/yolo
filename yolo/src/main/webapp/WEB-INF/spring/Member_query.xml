<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--여러 도메인을 위한 쿼리 xml를 작성할 때 도메인을 식별하기 위해 namespace 부여 => sqlSession.쿼리메서드("식별자", 
	paramdata); 식별자 => namespace.id ex)sqlSession.selectOne("board.search", paramdata); -->
<mapper namespace="member">
	<select id="search" parameterType="string" resultType="member">
		select mno, name, id, password, mgroup, empno, to_char(enteryear, 'yyyy-mm-dd')
		enteryear, email, auth, withdraw
		from member where id=#{id}
	</select>

	<insert id="insert" parameterType="member">
		insert into member(mno, id,
		auth, name, mgroup, enteryear, empno, email, password)
		values(
		member_mno_seq.nextval
		, #{id:VARCHAR}
		, #{auth:VARCHAR}
		,
		#{name:VARCHAR}
		, #{mgroup:VARCHAR}
		, sysdate
		, #{empno: INTEGER}
		,
		#{email:VARCHAR}
		, #{password:VARCHAR}
		)
	</insert>

	<select resultType="member" parameterType="pagebean" id="searchAll">
		select name, id, mgroup, empno, to_char(enteryear, 'yyyy-mm-dd')
		enteryear, email, auth from member

		<where>
			withdraw='N'
			<if test=" word != null">
				<choose>
					<when test=" key == 'auth' "> and auth = #{word} </when>
				</choose>
			</if>
		</where>
		order by name
	</select>

	<select resultType="int" parameterType="pagebean" id="getCount">
		select count(*) from member

		<where>
			<if test=" word != null">
				<choose>
					<when test=" key == 'auth' "> auth = #{word} </when>
				</choose>
			</if>
		</where>
	</select>

	<update id="update" parameterType="member">
		update member set
		password=#{password:VARCHAR}, auth=#{auth:VARCHAR},
		name=#{name:VARCHAR}, email=#{email:VARCHAR}, mgroup=#{mgroup:VARCHAR}
		where id=#{id:VARCHAR}
	</update>
	<update id="delete" parameterType="string">
		update member set withdraw =
		'Y'
		where id=#{id:VARCHAR}
	</update>
</mapper>












