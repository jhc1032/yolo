<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--여러 도메인을 위한 쿼리 xml를 작성할 때 도메인을 식별하기 위해 namespace 부여 => sqlSession.쿼리메서드("식별자", 
	paramdata); 식별자 => namespace.id ex)sqlSession.selectOne("qnaboard.search", 
	paramdata); -->
<mapper namespace="qnaboard">
	<select id="search" parameterType="int" resultType="qnaboard">
		select no, id, title, to_char(regdate, 'mm-dd') regdate, contents
		from qna where no=#{no}
	</select>
	
	<select id="searchReply" parameterType="int" resultType="qnaboardreply">
		select rno, contents, no, writer, to_char(regdate, 'mm-dd') regdate
		from qnareply where no=#{no}
	</select>
	
	<select id="searchAll" parameterType="pagebean" resultType="qnaboard">
		select rownum roNum, no, id, title, contents, regdate
		from ( select no, id, title, contents, to_char(regdate, 'yyyy-mm-dd') regdate
				from qna
				<where>
					<if test="word != null">
						<choose>
							<when test="key == 'id'">
								id = #{word}
							</when>
							<when test="key == 'title'">
								title like '%'||#{word}||'%'
							</when>
							<when test="key == 'contents'">
								contents like '%'||#{word}||'%'
							</when>
						</choose>
					</if>
					and deleted='N'
				</where>
				order by no desc)
	</select>
	<select id="getCount" parameterType="pagebean" resultType="int">
		select count(*) from qna
		<where>
			<if test="word != null">
				<choose>
					<when test="key == 'id'">
						id = #{word}
					</when>
					<when test="key == 'title'">
						title like '%'||#{word}||'%'
					</when>
					<when test="key == 'contents'">
						contents like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
	</select>
	<select id="getReplyCount" parameterType="int" resultType="int">
		select count(*) replyCnt from qnareply where no=#{no}
	</select>
	<select id="getqnaBoardNo" resultType="int">
		select
		qna_no_seq.nextval from dual
	</select>
	<select id="getqnaBoardReplyNo" resultType="int">
		sekect qnaBoardReply_rno_seq.nextval from dual
	</select>

	<insert id="insert" parameterType="qnaboard">
		insert into qna(no, id,
		title, contents, regdate) values(
		#{no:INTEGER}
		, #{id:VARCHAR}
		, #{title:VARCHAR}
		, #{contents:VARCHAR}
		, sysdate
		)
	</insert>
	<insert id="insertReply" parameterType="qnaboardreply">
		insert into qnareply(rno, contents, writer, regdate, no)
		values(qnareply_rno_seq.nextval, #{contents:VARCHAR}, #{writer:VARCHAR}, sysdate, #{bno:INTEGER})
	</insert>
	<update id="update" parameterType="qnaboard"> update qna 
		set id=#{id:VARCHAR} , title=#{title:VARCHAR} , contents=#{contents:VARCHAR} 
		, regdate=sysdate where no=#{no:INTEGER} </update> 
		
	<delete id="delete" parameterType="int"> 
		update qna set deleted='Y' where no=#{no}
	</delete>
</mapper>












